8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MISC
OBJECT MODULE PLACED IN MISC.OBJ
ASSEMBLER INVOKED BY:  C:\USERS\ANGADS~1\DOWNLO~1\ASM\ASM\ASM86.EXE MISC.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $mod186
                             2 +1  $EP
                             3     NAME MISC
                             4     ; Interrupt and misc routines for uPD70208 microcomputer system
                             5     ;
                             6     ; Filename:     MISC.ASM
                             7     ;
                             8     ; Author:       Dr Tay Teng Tiow
                             9     ; Address:      Department of Electrical Engineering 
                            10     ;               National University of Singapore
                            11     ;               10, Kent Ridge Crescent
                            12     ;               Singapore 0511. 
                            13     ; Date:         3rd November 1991
                            14     ;
                            15     ; This file contains proprietory information and cannot be copied 
                            16     ; or distributed without prior permission from the author.
                            17     ;---------------------------------------------------------------------------
                            18     
                            19     public  print_char, print_2hex, iodefine, Set_timer0, Set_timer1, Set_timer2, disable
                                   _timer0, disable_serial, enable_serial
                            20     extrn   serial_rec_action:far, timer0_action:far, timer1_action:far, timer2_action:fa
                                   r
                            21     
----                        22     INT_VEC_SEG     SEGMENT         AT      0H
                            23     ; Define the interrupt vector locations
                            24     ; System reserved interrupts
0000                        25                     ORG     0000H
0000 ????????               26             DIV_ZERO        DD      ?       ;not defined yet
0004 ????????               27             SINGLE_STEP     DD      ?       ;not defined yet
0008 ????????               28             NMI_INPUT       DD      ?       ;start of downloaded program
000C ????????               29             BRK_3_VEC       DD      ?       ;not defined yet
0010 ????????               30             OVERFLOW        DD      ?       ;not defined yet
0014 ????????               31             ARRAY_BND       DD      ?       ;Array Bounds
0020                        32                     ORG     020H
0020 8D01----       R       33             TIMER0_VEC              DD              TIMER0_INTR ; 8 x 4 = 32
                            34          
                            35     ; Interrupt control unit
0030                        36                     ORG     030H
0030 1201----       R       37             INTP0           DD      SERIAL_INTR
0034 ????????               38             INTP1           DD      ?       ;external, not used yet  
0038 ????????               39             INTP2           DD      ?       ;external, not used yet
003C ????????               40             INTP3           DD      ?       ;external, not used yet
0040 ????????               41         NUMERICS        DD      ?       ;
0044 ????????               42         RSVED           DD      ?       ;system reserved 
0048 9C01----       R       43         TIMER1_VEC      DD      TIMER1_INTR       ;route for timer 1
004C AB01----       R       44         TIMER2_VEC      DD      TIMER2_INTR       ;Timer2 Route
                            45                ;Reserved from 050H to 080H     
0080                        46                    ORG     080H
                            47     ;Interrupt Vector addrerss from 080h (type 32) to 3fCH (type 255)
                            48     ;are avaiable for user software interrupt           
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

                            49     ; Software interrupts
0080 ????????               50             SOFT0           DD      ? ;TYPE 32
0084 ????????               51             SOFT1           DD      ? ;TYPE 33
0088 ????????               52             SOFT2           DD      ?
008C ????????               53             SOFT3           DD      ?
0090 ????????               54             SOFT4           DD      ?
0094 ????????               55             SOFT5           DD      ?
0098 ????????               56             SOFT6           DD      ?
009C ????????               57             SOFT7           DD      ?
----                        58     INT_VEC_SEG     ENDS
                            59     
                            60     
                            61     
----                        62     INT_RAM_AREA    SEGMENT
  0080                      63             QUEUE_LEN       EQU     128
                            64     
0000 (128                   65             QUEUE_TRANS     DB      QUEUE_LEN DUP(?)
     ??
     )
0080 0000                   66             QUEUE_HEAD      DW      0H
0082 0000                   67             QUEUE_TAIL      DW      0H
----                        68     INT_RAM_AREA    ENDS
                            69     
                            70     
                            71 +1  $include(80188.inc)
                      =1    72     ;IO Setup for 80C188XL 
                      =1    73     ;By Zhu Shunyu
                      =1    74     
  FFA0                =1    75              UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                =1    76              LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                =1    77              PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                =1    78                      MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                      =1    79     
                      =1    80     
                      =1    81     ; Initial 80C188XL UCS Pin
                      =1    82     ; |start address|block size| value for No waits, No Ready   
                      =1    83     ;   FE000H            8K                 3E04H
                      =1    84     ;   FC000H           16K                 3C04H
                      =1    85     ;   F8000H           32K                 3804H
                      =1    86      
                      =1    87              
                      =1    88     ; Initialize Upper Chip Select pin with 8K ROM 
                      =1    89     ;         MOV DX, UMCR
                      =1    90     ;         MOV AX, 03E04H
                      =1    91     ;         OUT DX, AX
                      =1    92     
                      =1    93     ; Initialize Lower Chip Select pin with 8k RAM
                      =1    94     ;         MOV DX, LMCR
                      =1    95     ;         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last shoud be 5H for
                                    1 waits      
                      =1    96     ;         OUT DX, AL
                      =1    97     ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF           =1    98              MOV DX, MPCS
0003 B88300           =1    99              MOV AX, 0083H
0006 EE               =1   100              OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   101     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF           =1   102              MOV DX, PCSBA
000A B80300           =1   103              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
000D EE               =1   104              OUT DX, AL
                      =1   105     
                      =1   106     ;Serial port definition and initialize 
  0000                =1   107              SRB     EQU       00H ; Serial Receiver Buffer Register (R)
  0000                =1   108              STB     EQU       00H ; Serial Transmitter Holding Register(W)  
  0001                =1   109              SIER    EQU       01H ; Serial Interrupte Enable Register (w)
  0002                =1   110              IIR     EQU       02H ; Interrupt Identification Register (R)
  0003                =1   111              SMD     EQU       03H ; Serial Line Control Register
  0005                =1   112              SST     EQU       05H ; Serial Line Status Register
  0000                =1   113              DLL     EQU       00H ; Divisor Latch Least Significant BYTE
  0001                =1   114              DLM     EQU       01H ; Divisor Latch most  Significant BYTE
                      =1   115     
                      =1   116     ;Definition of content of SST register
                      =1   117     ;|Not Use|TE|THRE|BI|FE|PE|OE|DR|
                      =1   118     ;TE Transmitter empty
                      =1   119     ;THRE Transmittor Holding Register Empty
                      =1   120     ;BI Breakr Interrupt
                      =1   121     ;FE Framing Error
                      =1   122     ;PE Parity Error
                      =1   123     ;OE Overrun Error 
                      =1   124     ;DR Data Ready
  0001                =1   125               REC_RDY    EQU   00000001B
  0020                =1   126               TRAN_RDY   EQU   00100000B
  000E                =1   127               ERR_DET    EQU   00001110B
  0010                =1   128               BREAK_DET  EQU   00010000B
                      =1   129     ; Serial Line Control Data
  0007                =1   130             SMD_DATA     EQU    00000111B
  0003                =1   131             S_INT_ENA    EQU    00000011B
  0000                =1   132             S_INT_DIS    EQU    00000000B
                      =1   133        
                      =1   134     ;1st bit set 1 to access the Divisor latch 
                      =1   135     ;2 stop bits, 8 data bits, no parity check
  0087                =1   136             SMD_DATA_DIV EQU    10000111B
                      =1   137     ; Set divisor value        
000E BA0300           =1   138             MOV DX, SMD
0011 B087             =1   139             MOV AL, SMD_DATA_DIV
0013 EE               =1   140             OUT DX, AL
0014 BA0000           =1   141             MOV DX, DLL
0017 B034             =1   142             MOV AL, 52
0019 EE               =1   143             OUT DX, AL
001A BA0100           =1   144             MOV DX, DLM
001D B000             =1   145             MOV AL, 0
001F EE               =1   146             OUT DX, AL
                      =1   147     ;SET SERIAL PORT WORKING MODE
0020 BA0300           =1   148              MOV DX, SMD
0023 B007             =1   149              MOV AL, SMD_DATA
0025 EE               =1   150              OUT DX, AL
                      =1   151     ;DISABLE SERIAL PORT INT
0026 BA0100           =1   152              MOV DX, SIER
0029 B000             =1   153              MOV AL, 0
002B EE               =1   154              OUT DX, AL
                      =1   155     
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

                      =1   156     
                      =1   157     
                      =1   158     ; Timer control Unit
                      =1   159       
  FF66                =1   160              T2_CON    EQU      0FF66H ; Timer 2 Control Register
  FF62                =1   161              T2_CA     EQU      0FF62H ; Timer 2 compare register
  FF60                =1   162              T2_CNT    EQU      0FF60H ;
                      =1   163     
  FF5E                =1   164              T1_CON    EQU      0FF5EH ;
  FF5C                =1   165              T1_CB     EQU      0FF5CH ;
  FF5A                =1   166              T1_CA     EQU      0FF5AH ;
  FF58                =1   167              T1_CNT    EQU      0FF58H
                      =1   168              
  FF56                =1   169              T0_CON    EQU      0FF56H ;
  FF54                =1   170              T0_CB     EQU      0FF54H ;
  FF52                =1   171              T0_CA     EQU      0FF52H ;
  FF50                =1   172              T0_CNT    EQU      0FF50H   
                      =1   173     
  00F0                =1   174                      TIMER0_TIME    EQU 240;
  1388                =1   175                      TIMER1_TIME    EQU     5000;
  0BB8                =1   176                      TIMER2_TIME    EQU 3000;
                      =1   177              
                      =1   178     ; Timer Control Data
                      =1   179     
                      =1   180     
                      =1   181     ;Interrupt Control Registers
                      =1   182           
                      =1   183     
  FF3E                =1   184             INT3_CTRL       EQU 0FF3EH ;Interrupt 3 Control Register
  FF3C                =1   185             INT2_CTRL       EQU 0FF3CH
  FF3A                =1   186             INT1_CTRL       EQU 0FF3AH
  FF38                =1   187             INT0_CTRL       EQU 0FF38H
  FF32                =1   188             TIMER_CTRL      EQU 0FF32H ;Timer Interrupt Control Register
  FF30                =1   189             ISR             EQU 0FF30H ; Interrupt Status Register
  FF22                =1   190             EOI             EQU 0FF22H ; END OF INTERRUPT REGISTER
                      =1   191             
  FF28                =1   192             IMKW            EQU 0FF28H ; Interrupt Mask 
  FF2A                =1   193             IPMK            EQU 0FF2Ah ; Interrupt Priority Mask 
                      =1   194     
                      =1   195     ;| - | - | - | - |MSK|PM2|PM1|PM0| For TCU INT
                      =1   196     
                      =1   197     ;| - |SFNM|CAS|LVL|MSK|PM2|PM1|PM0| For TCU INT0,1
                      =1   198     
                      =1   199     ;MSK 1-enable, 0-mask int 
                      =1   200     ;pm0-pm1 Priority
                      =1   201     
                      =1   202         
                           203     
                           204     
----                       205     MISC_ROUTINE    SEGMENT
                           206     ASSUME CS:MISC_ROUTINE
                           207     
                           208     ; ---This procdeure initialize the system I/O area and on-chip devices-----
0000                       209     IODEFINE        PROC    FAR
0000 50                    210                     PUSH    AX
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

0001 52                    211                     PUSH    DX
                           212     
                           213     ; Initialize SCU for operation
0002 B007                  214                     MOV     AL,SMD_DATA
0004 E603                  215                     OUT     SMD,AL
                           216     ; Enable serial interrupts
0006 B003                  217                     MOV     AL,S_INT_ENA
0008 E601                  218                     OUT     SIER,AL
                           219     ; =============== INITIALIZATION OF INTERRUPT CONTROL UNIT =============
                           220     ; Initialize ICU for operation
                           221                     
                           222     ; Mask all interrupts except SCU
                           223                     ;disable TX interrupt,ENABLE RX.
000A B001                  224                     MOV     AL,1
000C E601                  225                     OUT     SIER,AL
                           226     ; SCU use INT0, enable INT0             
000E BA38FF                227                     MOV     DX, INT0_CTRL
0011 33C0                  228                     XOR     AX,AX
0013 EE                    229                     OUT     DX,AL
                           230     ; Mask other Int
0014 FA                    231                     CLI
0015 BA28FF                232                     MOV     DX,IMKW
0018 B8EE00                233                     MOV     AX,0EEH
001B EE                    234                     OUT     DX,AL   
001C 5A                    235                     POP     DX
001D 58                    236                     POP     AX
001E CB                    237                     RET
                           238     IODEFINE        ENDP
                           239     
                           240     
                           241     
001F                       242     DISABLE_SERIAL  PROC    FAR
001F 50                    243     PUSH AX
0020 53                    244     PUSH BX
0021 51                    245     PUSH CX
0022 52                    246     PUSH DX
                           247     
0023 B000                  248     MOV AL, S_INT_DIS
0025 E601                  249     OUT SIER, AL
                           250     
0027 5A                    251     POP DX
0028 59                    252     POP CX
0029 5B                    253     POP BX
002A 58                    254     POP AX
                           255     DISABLE_SERIAL ENDP
                           256     
                           257     
002B                       258     ENABLE_SERIAL PROC FAR
                           259     
002B 50                    260     PUSH AX
002C 53                    261     PUSH BX
002D 51                    262     PUSH CX
002E 52                    263     PUSH DX
                           264     
002F B003                  265     MOV AL, S_INT_ENA
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

0031 E601                  266     OUT SIER, AL
                           267     
0033 5A                    268     POP DX
0034 59                    269     POP CX
0035 5B                    270     POP BX
0036 58                    271     POP AX
                           272     ENABLE_SERIAL ENDP
                           273     
                           274     
                           275     ; ----------------Start of procedure PRINT_2HEX ------------------------
0037                       276     PRINT_2HEX      PROC    FAR
  0000                     277             QUE_BASE        EQU     OFFSET QUEUE_TRANS
                           278     ; The byte to be printed as 2 HEX number is put into AL.
                           279     ; This procedure is then called.
0037 9A8000----     R      280                     CALL    FAR PTR CHAR2HEX
                           281     ; Result is return in AX
003C 50                    282                     PUSH    AX
003D 8AC4                  283                     MOV     AL,AH
003F 9A4B00----     R      284                     CALL    FAR PTR PRINT_CHAR
0044 58                    285                     POP     AX
0045 9A4B00----     R      286                     CALL    FAR PTR PRINT_CHAR
004A CB                    287                     RET
                           288     PRINT_2HEX      ENDP
                           289     
                           290     
                           291     
                           292     
                           293     ; ---------------- Start of procedure PRINT_CHAR ------------------------
004B                       294     PRINT_CHAR      PROC    FAR
                           295     ; This procedure is called to put a character into queue for transmission
                           296     ; through the serial port. 
                           297     ; The data to be transmitted is put in AL before the procedure is called.
                           298     ; Data is put at the tail. Queue_tail is then inc to point to next loc.
                           299     ; Data is taken from the head. Queue_head is then inc to point to next data.
                           300             
004B 53                    301                     PUSH    BX                      ;Save BX        
004C 06                    302                     PUSH    ES
                           303     
004D 50                    304                     PUSH    AX
                           305     
004E BB----         R      306                     MOV     BX,SEG QUEUE_TAIL       ;Init segment register.
0051 8EC3                  307                     MOV     ES,BX                   ;ES now contains seg of INT_RAM_AREA
                           308     
0053 E401                  309                     IN      AL,SIER                 ;disable TX interrupt.
0055 24FD                  310                     AND     AL,11111101B
0057 E601                  311                     OUT     SIER,AL
                           312     
0059 58                    313                     POP     AX
005A 268B1E8200            314                     MOV     BX,ES:QUEUE_TAIL                
005F 268807                315                     MOV     ES:QUE_BASE[BX],AL      ;Put data to queue_tail.
0062 26FF068200            316                     INC     ES:QUEUE_TAIL           ;Increment queue_tail
0067 26813E82008000        317                     CMP     ES:QUEUE_TAIL,QUEUE_LEN ;and wrap around
006E 7C07                  318                     JL      L_PRINT1                ;to zero if needed.
0070 26C70682000000        319                     MOV     ES:QUEUE_TAIL,0
0077                       320     L_PRINT1:       
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

0077 E401                  321                     IN      AL,SIER                 ;enable TX interrupt
0079 0C02                  322                     OR      AL,00000010B
007B E601                  323                     OUT     SIER,AL
                           324     
007D 07                    325                     POP     ES
007E 5B                    326                     POP     BX
007F CB                    327                     RET
                           328     PRINT_CHAR      ENDP
                           329     
                           330     
                           331     
                           332     
                           333     ;------------------Start of Procedure CHAR2HEX ----------------------------
0080                       334     CHAR2HEX        PROC    FAR
                           335     ; Char to be converted to HEX is put in AL before calling this procedure.
                           336     ; HEX version is return in AX.
0080 8AE0                  337                     MOV     AH,AL
0082 240F                  338                     AND     AL,00001111B
0084 3C09                  339                     CMP     AL,9
0086 7F05                  340                     JG      GT9_1
0088 0C30                  341                     OR      AL,00110000B
008A EB0590                342                     JMP     DIGIT2
008D 2C09                  343     GT9_1:          SUB     AL,9
008F 0C40                  344                     OR      AL,01000000B
0091                       345     DIGIT2:
0091 C0EC04                346                     SHR     AH,4
0094 80FC09                347                     CMP     AH,9
0097 7F06                  348                     JG      GT9_2
0099 80CC30                349                     OR      AH,00110000B
009C EB0790                350                     JMP     DONE
009F 80EC09                351     GT9_2:          SUB     AH,9
00A2 80CC40                352                     OR      AH,01000000B
00A5                       353     DONE:
00A5 CB                    354                     RET
                           355     CHAR2HEX        ENDP
                           356     
                           357     
                           358     
                           359     
                           360     
00A6                       361     Set_timer0      proc Far
00A6 50                    362             push ax
00A7 52                    363             push dx
                           364             ;Initialize Timer0      
00A8 B80000                365             mov ax, 0;
00AB BA50FF                366             mov dx, T0_CNT;init timer count register to 0
00AE EE                    367             OUT DX, AL
                           368     
00AF B8F000                369             MOV AX, TIMER0_TIME
00B2 BA52FF                370             MOV DX, T0_CA
00B5 EE                    371             OUT DX, AL
                           372             
00B6 B801E0                373             MOV AX,0E001H ;enable counting
00B9 BA56FF                374             MOV DX, T0_CON
00BC EE                    375             OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

                           376     
00BD BA32FF                377             MOV DX, TIMER_CTRL;Timer Interrupt Control Register(80188.inc)
00C0 B001                  378             MOV AL, 01H; Serial Interrupte Enable Register (w), Divisor Latch most  Signi
                                   ficant BYTE(80188.inc)
00C2 EE                    379             OUT DX, AL
00C3 5A                    380             pop dx
00C4 58                    381             pop ax
                           382     
00C5 CB                    383     ret
                           384     Set_timer0 endp
                           385     
00C6                       386     Set_timer1      proc Far
00C6 50                    387             push ax
00C7 52                    388             push dx
                           389             ;Initialize Timer1
00C8 B80000                390             mov ax, 0;
00CB BA58FF                391             mov dx, T1_CNT;init timer count register to 0
00CE EE                    392             OUT DX, AL
                           393     
00CF B88813                394             MOV AX, TIMER1_TIME
00D2 BA5AFF                395             MOV DX, T1_CA
00D5 EE                    396             OUT DX, AL
                           397             
00D6 B801E0                398             MOV AX,0E001H ;enable counting
00D9 BA5EFF                399             MOV DX, T1_CON
00DC EE                    400             OUT DX, AL
                           401     
00DD BA32FF                402             MOV DX, TIMER_CTRL;Timer Interrupt Control Register(80188.inc)
00E0 B001                  403             MOV AL, 01H; Serial Interrupte Enable Register (w), Divisor Latch most  Signi
                                   ficant BYTE(80188.inc)
00E2 EE                    404             OUT DX, AL
00E3 5A                    405             pop dx
00E4 58                    406             pop ax
                           407     
00E5 CB                    408     ret
                           409     Set_timer1 endp
                           410     
                           411     
00E6                       412     Set_timer2      proc Far
00E6 50                    413             push ax
00E7 52                    414             push dx
                           415     
                           416             ;Initialize Timer2 -- LED
00E8 B80000                417             mov ax, 0;
00EB BA60FF                418             mov dx, T2_CNT;
00EE EE                    419             OUT DX, AL
                           420     
00EF B8B80B                421             MOV AX, TIMER2_TIME;
00F2 BA62FF                422             MOV DX, T2_CA;
00F5 EE                    423             OUT DX, AL
                           424     
00F6 B801E0                425             MOV AX,0E001H
00F9 BA66FF                426             MOV DX, T2_CON
00FC EE                    427             OUT DX, AL
                           428     
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

00FD BA32FF                429             MOV DX, TIMER_CTRL
0100 B001                  430             MOV AL, 01H
0102 EE                    431             OUT DX, AL
0103 5A                    432             pop dx
0104 58                    433             pop ax
                           434     
0105 CB                    435     ret
                           436     Set_timer2 endp
                           437     
0106                       438     disable_timer0 proc far
0106 50                    439             push ax
0107 52                    440             push dx
                           441             
0108 B80160                442             MOV AX,06001H
010B BA56FF                443             MOV DX, T0_CON
010E EE                    444             OUT DX, AL
                           445     
010F 58                    446             pop ax
0110 5A                    447             pop dx
0111 CB                    448     ret
                           449     disable_timer0 endp
                           450     
                           451     
                           452     
                           453     ; ************************************************************************
                           454     ;                       INTERRUPT ROUTINES                               *
                           455     ; ************************************************************************
                           456     
                           457     ; **************** Start of SERIAL_INTR service routine ******************
                           458     
                           459     ;*****************CAUTION*****************
                           460     ;At the end of interrutp routines, you must write EOI (end of Int) +
                           461     ;with the INT type (INT0-type 12) (timer-type 8)                   +    
                           462     ;comment added by Zhu Shunyu    March,2000                         +            
                                              
                           463     ;Interrupt Routines Modified accordly to fit 80C188XL
                           464     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0112                       465     SERIAL_INTR:
0112 50                    466                     PUSH    AX                      ;save registers
0113 53                    467                     PUSH    BX
0114 52                    468                     PUSH    DX
                           469                                    
0115 E402                  470                     IN      AL,IIR                  ;read in serial INT ID
0117 2407                  471                     AND     AL,00000111B
0119 3C04                  472                     CMP     AL,00000100B            ;check if rx interrupt
011B 740F                  473                     JE      RECEIVE_INTR
                           474     
011D 3C02                  475                     CMP     AL,00000010B            ;check if tx interrupt
011F 741D                  476                     JE      TRANSMIT_INTR
                           477     
                           478                     
                           479     ;RESET_INT_CTL
0121 BA22FF                480                     MOV DX, EOI
0124 B80C00                481                     MOV AX, 12
0127 EE                    482                     OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE   10


LOC  OBJ                  LINE     SOURCE

                           483     
0128 5A                    484                     POP     DX
0129 5B                    485                     POP     BX                      ;false serial interrupt
012A 58                    486                     POP     AX
012B CF                    487                     IRET                            ;return
                           488     
012C                       489     RECEIVE_INTR:   
                           490                   
012C E400                  491                     IN      AL,SRB                  
                           492     ; Information received will be used by user routine
                           493     ; Action to be taken will be contained in SERIAL_REC_ACTION
012E 9A0000----     E      494                     CALL    FAR PTR SERIAL_REC_ACTION
                           495                     
0133 BA22FF                496                     MOV DX, EOI
0136 B80C00                497                     MOV AX, 12
0139 EE                    498                     OUT DX, AL
013A 5A                    499                     POP     DX
013B 5B                    500                     POP     BX                      ;false serial interrupt
013C 58                    501                     POP     AX
013D CF                    502                     IRET
                           503     
013E                       504     TRANSMIT_INTR:
                           505                    
013E 06                    506                     PUSH    ES                      ;save ES
013F BB----         R      507                     MOV     BX,SEG QUEUE_TAIL       ;set ES to SERIAL_Q_SEG
0142 8EC3                  508                     MOV     ES,BX
0144 268B1E8200            509                     MOV     BX,ES:QUEUE_TAIL
0149 263B1E8000            510                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
014E 742B                  511                     JE      L_TX2
0150 268B1E8000            512                     MOV     BX,ES:QUEUE_HEAD        ;get data from queue
0155 268A07                513                     MOV     AL,ES:QUE_BASE[BX]
0158 E600                  514                     OUT     STB,AL                  ;tx data
015A 26FF068000            515                     INC     ES:QUEUE_HEAD           ;point to next data
015F 26813E80008000        516                     CMP     ES:QUEUE_HEAD,QUEUE_LEN ;wrap around if necessary
0166 7C07                  517                     JL      L_TX1
0168 26C70680000000        518                     MOV     ES:QUEUE_HEAD,0
016F                       519     L_TX1:          
016F 268B1E8200            520                     MOV     BX,ES:QUEUE_TAIL
0174 263B1E8000            521                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
0179 7506                  522                     JNE     L_TX3
017B                       523     L_TX2:
017B E401                  524                     IN      AL,SIER                 ;no more, disable TX interrupt.
017D 24FD                  525                     AND     AL,11111101B
017F E601                  526                     OUT     SIER,AL
0181                       527     L_TX3:
                           528                     
                           529     ;RESET_INT_CTL
0181 BA22FF                530                     MOV DX, EOI
0184 B80C00                531                     MOV AX, 12
0187 EE                    532                     OUT DX, AL
0188 07                    533                     POP     ES                      ;restore original ES(transmit)
                           534                     
0189 5A                    535                     POP     DX 
018A 5B                    536                     POP     BX                      ;return serial interrupt
018B 58                    537                     POP     AX
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE   11


LOC  OBJ                  LINE     SOURCE

018C CF                    538                     IRET
                           539     ; **************** End of SERIAL_INTR service routine ************************
                           540     
                           541     
                           542     
                           543     
                           544     
                           545     
                           546     ; **************** Start of TIMER0_INTR service routine ******************
018D                       547     TIMER0_INTR:
018D 50                    548                     PUSH    AX
                           549                     
                           550     ; Action to be taken on timer0 interrupt to be written by user
018E 9A0000----     E      551                     CALL    FAR PTR TIMER0_ACTION
                           552                   
0193 58                    553                     POP     AX              ;return interrupt
                           554                     ;RESET_INT_CTL  
0194 BA22FF                555                     MOV DX, EOI
0197 B80800                556                     MOV AX, 8
019A EE                    557                     OUT DX, AL
019B CF                    558                     IRET
                           559     ; **************** End of TIMER0_INTR service routine ************************
                           560     
                           561     
                           562     ; **************** Start of TIMER1_INTR service routine ******************
019C                       563     TIMER1_INTR:
019C 50                    564                     PUSH    AX
                           565                     
                           566     ; Action to be taken on timer1 interrupt to be written by user
019D 9A0000----     E      567                     CALL    FAR PTR TIMER1_ACTION
                           568                   
01A2 58                    569                     POP     AX              ;return interrupt
                           570                     ;RESET_INT_CTL  
01A3 BA22FF                571                     MOV DX, EOI
01A6 B80800                572                     MOV AX, 8
01A9 EE                    573                     OUT DX, AL
01AA CF                    574                     IRET
                           575     ; **************** End of TIMER1_INTR service routine ************************
                           576     
                           577     
                           578     ; **************** Start of TIMER2_INTR service routine ******************
01AB                       579     TIMER2_INTR:
01AB 50                    580                     PUSH    AX
                           581                     
                           582     ; Action to be taken on timer2 interrupt to be written by user
01AC 9A0000----     E      583                     CALL    FAR PTR TIMER2_ACTION
                           584                   
01B1 58                    585                     POP     AX              ;return interrupt
                           586                     ;RESET_INT_CTL  
01B2 BA22FF                587                     MOV DX, EOI
01B5 B80800                588                     MOV AX, 8
01B8 EE                    589                     OUT DX, AL
01B9 CF                    590                     IRET
                           591     ; **************** End of TIMER2_INTR service routine ************************
                           592     
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     03:58:39  12/05/;2  PAGE   12


LOC  OBJ                  LINE     SOURCE

                           593     
                           594     
----                       595     MISC_ROUTINE    ENDS
                           596     
                           597     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
