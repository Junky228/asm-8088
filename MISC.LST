8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MISC
OBJECT MODULE PLACED IN MISC.OBJ
ASSEMBLER INVOKED BY:  C:\USERS\ANGADS~1\DOWNLO~1\ASM\ASM\ASM86.EXE MISC.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $mod186
                             2 +1  $EP
                             3     NAME MISC
                             4     ; Interrupt and misc routines for uPD70208 microcomputer system
                             5     ;
                             6     ; Filename:     MISC.ASM
                             7     ;
                             8     ; Author:       Dr Tay Teng Tiow
                             9     ; Address:      Department of Electrical Engineering 
                            10     ;               National University of Singapore
                            11     ;               10, Kent Ridge Crescent
                            12     ;               Singapore 0511. 
                            13     ; Date:         3rd November 1991
                            14     ;
                            15     ; This file contains proprietory information and cannot be copied 
                            16     ; or distributed without prior permission from the author.
                            17     ;---------------------------------------------------------------------------
                            18     
                            19     public  print_char, print_2hex, iodefine, Set_timer0, Set_timer1, Set_timer2, disable
                                   _timer0
                            20     extrn   serial_rec_action:far, timer0_action:far, timer1_action:far, timer2_action:fa
                                   r
                            21     
----                        22     INT_VEC_SEG     SEGMENT         AT      0H
                            23     ; Define the interrupt vector locations
                            24     ; System reserved interrupts
0000                        25                     ORG     0000H
0000 ????????               26             DIV_ZERO        DD      ?       ;not defined yet
0004 ????????               27             SINGLE_STEP     DD      ?       ;not defined yet
0008 ????????               28             NMI_INPUT       DD      ?       ;start of downloaded program
000C ????????               29             BRK_3_VEC       DD      ?       ;not defined yet
0010 ????????               30             OVERFLOW        DD      ?       ;not defined yet
0014 ????????               31             ARRAY_BND       DD      ?       ;Array Bounds
0020                        32                     ORG     020H
0020 7501----       R       33             TIMER0_VEC              DD              TIMER0_INTR ; 8 x 4 = 32
                            34          
                            35     ; Interrupt control unit
0030                        36                     ORG     030H
0030 FA00----       R       37             INTP0           DD      SERIAL_INTR
0034 ????????               38             INTP1           DD      ?       ;external, not used yet  
0038 ????????               39             INTP2           DD      ?       ;external, not used yet
003C ????????               40             INTP3           DD      ?       ;external, not used yet
0040 ????????               41         NUMERICS        DD      ?       ;
0044 ????????               42         RSVED           DD      ?       ;system reserved 
0048 8401----       R       43         TIMER1_VEC      DD      TIMER1_INTR       ;route for timer 1
004C 9301----       R       44         TIMER2_VEC      DD      TIMER2_INTR       ;Timer2 Route
                            45                ;Reserved from 050H to 080H     
0080                        46                    ORG     080H
                            47     ;Interrupt Vector addrerss from 080h (type 32) to 3fCH (type 255)
                            48     ;are avaiable for user software interrupt           
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

                            49     ; Software interrupts
0080 ????????               50             SOFT0           DD      ? ;TYPE 32
0084 ????????               51             SOFT1           DD      ? ;TYPE 33
0088 ????????               52             SOFT2           DD      ?
008C ????????               53             SOFT3           DD      ?
0090 ????????               54             SOFT4           DD      ?
0094 ????????               55             SOFT5           DD      ?
0098 ????????               56             SOFT6           DD      ?
009C ????????               57             SOFT7           DD      ?
----                        58     INT_VEC_SEG     ENDS
                            59     
                            60     
                            61     
----                        62     INT_RAM_AREA    SEGMENT
  0080                      63             QUEUE_LEN       EQU     128
                            64     
0000 (128                   65             QUEUE_TRANS     DB      QUEUE_LEN DUP(?)
     ??
     )
0080 0000                   66             QUEUE_HEAD      DW      0H
0082 0000                   67             QUEUE_TAIL      DW      0H
----                        68     INT_RAM_AREA    ENDS
                            69     
                            70     
                            71 +1  $include(80188.inc)
                      =1    72     ;IO Setup for 80C188XL 
                      =1    73     ;By Zhu Shunyu
                      =1    74     
  FFA0                =1    75              UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                =1    76              LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                =1    77              PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                =1    78                      MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                      =1    79     
                      =1    80     
                      =1    81     ; Initial 80C188XL UCS Pin
                      =1    82     ; |start address|block size| value for No waits, No Ready   
                      =1    83     ;   FE000H            8K                 3E04H
                      =1    84     ;   FC000H           16K                 3C04H
                      =1    85     ;   F8000H           32K                 3804H
                      =1    86      
                      =1    87              
                      =1    88     ; Initialize Upper Chip Select pin with 8K ROM 
                      =1    89     ;         MOV DX, UMCR
                      =1    90     ;         MOV AX, 03E04H
                      =1    91     ;         OUT DX, AX
                      =1    92     
                      =1    93     ; Initialize Lower Chip Select pin with 8k RAM
                      =1    94     ;         MOV DX, LMCR
                      =1    95     ;         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last shoud be 5H for
                                    1 waits      
                      =1    96     ;         OUT DX, AL
                      =1    97     ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF           =1    98              MOV DX, MPCS
0003 B88300           =1    99              MOV AX, 0083H
0006 EE               =1   100              OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   101     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF           =1   102              MOV DX, PCSBA
000A B80300           =1   103              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
000D EE               =1   104              OUT DX, AL
                      =1   105     
                      =1   106     ;Serial port definition and initialize 
  0000                =1   107              SRB     EQU       00H ; Serial Receiver Buffer Register (R)
  0000                =1   108              STB     EQU       00H ; Serial Transmitter Holding Register(W)  
  0001                =1   109              SIER    EQU       01H ; Serial Interrupte Enable Register (w)
  0002                =1   110              IIR     EQU       02H ; Interrupt Identification Register (R)
  0003                =1   111              SMD     EQU       03H ; Serial Line Control Register
  0005                =1   112              SST     EQU       05H ; Serial Line Status Register
  0000                =1   113              DLL     EQU       00H ; Divisor Latch Least Significant BYTE
  0001                =1   114              DLM     EQU       01H ; Divisor Latch most  Significant BYTE
                      =1   115     
                      =1   116     ;Definition of content of SST register
                      =1   117     ;|Not Use|TE|THRE|BI|FE|PE|OE|DR|
                      =1   118     ;TE Transmitter empty
                      =1   119     ;THRE Transmittor Holding Register Empty
                      =1   120     ;BI Breakr Interrupt
                      =1   121     ;FE Framing Error
                      =1   122     ;PE Parity Error
                      =1   123     ;OE Overrun Error 
                      =1   124     ;DR Data Ready
  0001                =1   125               REC_RDY    EQU   00000001B
  0020                =1   126               TRAN_RDY   EQU   00100000B
  000E                =1   127               ERR_DET    EQU   00001110B
  0010                =1   128               BREAK_DET  EQU   00010000B
                      =1   129     ; Serial Line Control Data
  0007                =1   130             SMD_DATA     EQU    00000111B
  0003                =1   131             S_INT_ENA    EQU    00000011B
  0000                =1   132             S_INT_DIS    EQU    00000000B
                      =1   133        
                      =1   134     ;1st bit set 1 to access the Divisor latch 
                      =1   135     ;2 stop bits, 8 data bits, no parity check
  0087                =1   136             SMD_DATA_DIV EQU    10000111B
                      =1   137     ; Set divisor value        
000E BA0300           =1   138             MOV DX, SMD
0011 B087             =1   139             MOV AL, SMD_DATA_DIV
0013 EE               =1   140             OUT DX, AL
0014 BA0000           =1   141             MOV DX, DLL
0017 B034             =1   142             MOV AL, 52
0019 EE               =1   143             OUT DX, AL
001A BA0100           =1   144             MOV DX, DLM
001D B000             =1   145             MOV AL, 0
001F EE               =1   146             OUT DX, AL
                      =1   147     ;SET SERIAL PORT WORKING MODE
0020 BA0300           =1   148              MOV DX, SMD
0023 B007             =1   149              MOV AL, SMD_DATA
0025 EE               =1   150              OUT DX, AL
                      =1   151     ;DISABLE SERIAL PORT INT
0026 BA0100           =1   152              MOV DX, SIER
0029 B000             =1   153              MOV AL, 0
002B EE               =1   154              OUT DX, AL
                      =1   155     
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

                      =1   156     
                      =1   157     
                      =1   158     ; Timer control Unit
                      =1   159       
  FF66                =1   160              T2_CON    EQU      0FF66H ; Timer 2 Control Register
  FF62                =1   161              T2_CA     EQU      0FF62H ; Timer 2 compare register
  FF60                =1   162              T2_CNT    EQU      0FF60H ;
                      =1   163     
  FF5E                =1   164              T1_CON    EQU      0FF5EH ;
  FF5C                =1   165              T1_CB     EQU      0FF5CH ;
  FF5A                =1   166              T1_CA     EQU      0FF5AH ;
  FF58                =1   167              T1_CNT    EQU      0FF58H
                      =1   168              
  FF56                =1   169              T0_CON    EQU      0FF56H ;
  FF54                =1   170              T0_CB     EQU      0FF54H ;
  FF52                =1   171              T0_CA     EQU      0FF52H ;
  FF50                =1   172              T0_CNT    EQU      0FF50H   
                      =1   173     
  00F0                =1   174                      TIMER0_TIME    EQU 240;
  1388                =1   175                      TIMER1_TIME    EQU     5000;
  0BB8                =1   176                      TIMER2_TIME    EQU 3000;
                      =1   177              
                      =1   178     ; Timer Control Data
                      =1   179     
                      =1   180     
                      =1   181     ;Interrupt Control Registers
                      =1   182           
                      =1   183     
  FF3E                =1   184             INT3_CTRL       EQU 0FF3EH ;Interrupt 3 Control Register
  FF3C                =1   185             INT2_CTRL       EQU 0FF3CH
  FF3A                =1   186             INT1_CTRL       EQU 0FF3AH
  FF38                =1   187             INT0_CTRL       EQU 0FF38H
  FF32                =1   188             TIMER_CTRL      EQU 0FF32H ;Timer Interrupt Control Register
  FF30                =1   189             ISR             EQU 0FF30H ; Interrupt Status Register
  FF22                =1   190             EOI             EQU 0FF22H ; END OF INTERRUPT REGISTER
                      =1   191             
  FF28                =1   192             IMKW            EQU 0FF28H ; Interrupt Mask 
  FF2A                =1   193             IPMK            EQU 0FF2Ah ; Interrupt Priority Mask 
                      =1   194     
                      =1   195     ;| - | - | - | - |MSK|PM2|PM1|PM0| For TCU INT
                      =1   196     
                      =1   197     ;| - |SFNM|CAS|LVL|MSK|PM2|PM1|PM0| For TCU INT0,1
                      =1   198     
                      =1   199     ;MSK 1-enable, 0-mask int 
                      =1   200     ;pm0-pm1 Priority
                      =1   201     
                      =1   202         
                           203     
                           204     
----                       205     MISC_ROUTINE    SEGMENT
                           206     ASSUME CS:MISC_ROUTINE
                           207     
                           208     ; ---This procdeure initialize the system I/O area and on-chip devices-----
0000                       209     IODEFINE        PROC    FAR
0000 50                    210                     PUSH    AX
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

0001 52                    211                     PUSH    DX
                           212     
                           213     ; Initialize SCU for operation
0002 B007                  214                     MOV     AL,SMD_DATA
0004 E603                  215                     OUT     SMD,AL
                           216     ; Enable serial interrupts
0006 B003                  217                     MOV     AL,S_INT_ENA
0008 E601                  218                     OUT     SIER,AL
                           219     ; =============== INITIALIZATION OF INTERRUPT CONTROL UNIT =============
                           220     ; Initialize ICU for operation
                           221                     
                           222     ; Mask all interrupts except SCU
                           223                     ;disable TX interrupt,ENABLE RX.
000A B001                  224                     MOV     AL,1
000C E601                  225                     OUT     SIER,AL
                           226     ; SCU use INT0, enable INT0             
000E BA38FF                227                     MOV     DX, INT0_CTRL
0011 33C0                  228                     XOR     AX,AX
0013 EE                    229                     OUT     DX,AL
                           230     ; Mask other Int
0014 FA                    231                     CLI
0015 BA28FF                232                     MOV     DX,IMKW
0018 B8EE00                233                     MOV     AX,0EEH
001B EE                    234                     OUT     DX,AL   
001C 5A                    235                     POP     DX
001D 58                    236                     POP     AX
001E CB                    237                     RET
                           238     IODEFINE        ENDP
                           239     
                           240     
                           241     
                           242     
                           243     
                           244     ; ----------------Start of procedure PRINT_2HEX ------------------------
001F                       245     PRINT_2HEX      PROC    FAR
  0000                     246             QUE_BASE        EQU     OFFSET QUEUE_TRANS
                           247     ; The byte to be printed as 2 HEX number is put into AL.
                           248     ; This procedure is then called.
001F 9A6800----     R      249                     CALL    FAR PTR CHAR2HEX
                           250     ; Result is return in AX
0024 50                    251                     PUSH    AX
0025 8AC4                  252                     MOV     AL,AH
0027 9A3300----     R      253                     CALL    FAR PTR PRINT_CHAR
002C 58                    254                     POP     AX
002D 9A3300----     R      255                     CALL    FAR PTR PRINT_CHAR
0032 CB                    256                     RET
                           257     PRINT_2HEX      ENDP
                           258     
                           259     
                           260     
                           261     
                           262     ; ---------------- Start of procedure PRINT_CHAR ------------------------
0033                       263     PRINT_CHAR      PROC    FAR
                           264     ; This procedure is called to put a character into queue for transmission
                           265     ; through the serial port. 
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           266     ; The data to be transmitted is put in AL before the procedure is called.
                           267     ; Data is put at the tail. Queue_tail is then inc to point to next loc.
                           268     ; Data is taken from the head. Queue_head is then inc to point to next data.
                           269             
0033 53                    270                     PUSH    BX                      ;Save BX        
0034 06                    271                     PUSH    ES
                           272     
0035 50                    273                     PUSH    AX
                           274     
0036 BB----         R      275                     MOV     BX,SEG QUEUE_TAIL       ;Init segment register.
0039 8EC3                  276                     MOV     ES,BX                   ;ES now contains seg of INT_RAM_AREA
                           277     
003B E401                  278                     IN      AL,SIER                 ;disable TX interrupt.
003D 24FD                  279                     AND     AL,11111101B
003F E601                  280                     OUT     SIER,AL
                           281     
0041 58                    282                     POP     AX
0042 268B1E8200            283                     MOV     BX,ES:QUEUE_TAIL                
0047 268807                284                     MOV     ES:QUE_BASE[BX],AL      ;Put data to queue_tail.
004A 26FF068200            285                     INC     ES:QUEUE_TAIL           ;Increment queue_tail
004F 26813E82008000        286                     CMP     ES:QUEUE_TAIL,QUEUE_LEN ;and wrap around
0056 7C07                  287                     JL      L_PRINT1                ;to zero if needed.
0058 26C70682000000        288                     MOV     ES:QUEUE_TAIL,0
005F                       289     L_PRINT1:       
005F E401                  290                     IN      AL,SIER                 ;enable TX interrupt
0061 0C02                  291                     OR      AL,00000010B
0063 E601                  292                     OUT     SIER,AL
                           293     
0065 07                    294                     POP     ES
0066 5B                    295                     POP     BX
0067 CB                    296                     RET
                           297     PRINT_CHAR      ENDP
                           298     
                           299     
                           300     
                           301     
                           302     ;------------------Start of Procedure CHAR2HEX ----------------------------
0068                       303     CHAR2HEX        PROC    FAR
                           304     ; Char to be converted to HEX is put in AL before calling this procedure.
                           305     ; HEX version is return in AX.
0068 8AE0                  306                     MOV     AH,AL
006A 240F                  307                     AND     AL,00001111B
006C 3C09                  308                     CMP     AL,9
006E 7F05                  309                     JG      GT9_1
0070 0C30                  310                     OR      AL,00110000B
0072 EB0590                311                     JMP     DIGIT2
0075 2C09                  312     GT9_1:          SUB     AL,9
0077 0C40                  313                     OR      AL,01000000B
0079                       314     DIGIT2:
0079 C0EC04                315                     SHR     AH,4
007C 80FC09                316                     CMP     AH,9
007F 7F06                  317                     JG      GT9_2
0081 80CC30                318                     OR      AH,00110000B
0084 EB0790                319                     JMP     DONE
0087 80EC09                320     GT9_2:          SUB     AH,9
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

008A 80CC40                321                     OR      AH,01000000B
008D                       322     DONE:
008D CB                    323                     RET
                           324     CHAR2HEX        ENDP
                           325     
                           326     
                           327     
                           328     
                           329     
008E                       330     Set_timer0      proc Far
008E 50                    331             push ax
008F 52                    332             push dx
                           333             ;Initialize Timer0      
0090 B80000                334             mov ax, 0;
0093 BA50FF                335             mov dx, T0_CNT;init timer count register to 0
0096 EE                    336             OUT DX, AL
                           337     
0097 B8F000                338             MOV AX, TIMER0_TIME
009A BA52FF                339             MOV DX, T0_CA
009D EE                    340             OUT DX, AL
                           341             
009E B801E0                342             MOV AX,0E001H ;enable counting
00A1 BA56FF                343             MOV DX, T0_CON
00A4 EE                    344             OUT DX, AL
                           345     
00A5 BA32FF                346             MOV DX, TIMER_CTRL;Timer Interrupt Control Register(80188.inc)
00A8 B001                  347             MOV AL, 01H; Serial Interrupte Enable Register (w), Divisor Latch most  Signi
                                   ficant BYTE(80188.inc)
00AA EE                    348             OUT DX, AL
00AB 5A                    349             pop dx
00AC 58                    350             pop ax
                           351     
00AD CB                    352     ret
                           353     Set_timer0 endp
                           354     
00AE                       355     Set_timer1      proc Far
00AE 50                    356             push ax
00AF 52                    357             push dx
                           358             ;Initialize Timer1
00B0 B80000                359             mov ax, 0;
00B3 BA58FF                360             mov dx, T1_CNT;init timer count register to 0
00B6 EE                    361             OUT DX, AL
                           362     
00B7 B88813                363             MOV AX, TIMER1_TIME
00BA BA5AFF                364             MOV DX, T1_CA
00BD EE                    365             OUT DX, AL
                           366             
00BE B801E0                367             MOV AX,0E001H ;enable counting
00C1 BA5EFF                368             MOV DX, T1_CON
00C4 EE                    369             OUT DX, AL
                           370     
00C5 BA32FF                371             MOV DX, TIMER_CTRL;Timer Interrupt Control Register(80188.inc)
00C8 B001                  372             MOV AL, 01H; Serial Interrupte Enable Register (w), Divisor Latch most  Signi
                                   ficant BYTE(80188.inc)
00CA EE                    373             OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

00CB 5A                    374             pop dx
00CC 58                    375             pop ax
                           376     
00CD CB                    377     ret
                           378     Set_timer1 endp
                           379     
                           380     
00CE                       381     Set_timer2      proc Far
00CE 50                    382             push ax
00CF 52                    383             push dx
                           384     
                           385             ;Initialize Timer2 -- LED
00D0 B80000                386             mov ax, 0;
00D3 BA60FF                387             mov dx, T2_CNT;
00D6 EE                    388             OUT DX, AL
                           389     
00D7 B8B80B                390             MOV AX, TIMER2_TIME;
00DA BA62FF                391             MOV DX, T2_CA;
00DD EE                    392             OUT DX, AL
                           393     
00DE B801E0                394             MOV AX,0E001H
00E1 BA66FF                395             MOV DX, T2_CON
00E4 EE                    396             OUT DX, AL
                           397     
00E5 BA32FF                398             MOV DX, TIMER_CTRL
00E8 B001                  399             MOV AL, 01H
00EA EE                    400             OUT DX, AL
00EB 5A                    401             pop dx
00EC 58                    402             pop ax
                           403     
00ED CB                    404     ret
                           405     Set_timer2 endp
                           406     
00EE                       407     disable_timer0 proc far
00EE 50                    408             push ax
00EF 52                    409             push dx
                           410             
00F0 B80160                411             MOV AX,06001H
00F3 BA56FF                412             MOV DX, T0_CON
00F6 EE                    413             OUT DX, AL
                           414     
00F7 58                    415             pop ax
00F8 5A                    416             pop dx
00F9 CB                    417     ret
                           418     disable_timer0 endp
                           419     
                           420     
                           421     
                           422     ; ************************************************************************
                           423     ;                       INTERRUPT ROUTINES                               *
                           424     ; ************************************************************************
                           425     
                           426     ; **************** Start of SERIAL_INTR service routine ******************
                           427     
                           428     ;*****************CAUTION*****************
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

                           429     ;At the end of interrutp routines, you must write EOI (end of Int) +
                           430     ;with the INT type (INT0-type 12) (timer-type 8)                   +    
                           431     ;comment added by Zhu Shunyu    March,2000                         +            
                                              
                           432     ;Interrupt Routines Modified accordly to fit 80C188XL
                           433     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00FA                       434     SERIAL_INTR:
00FA 50                    435                     PUSH    AX                      ;save registers
00FB 53                    436                     PUSH    BX
00FC 52                    437                     PUSH    DX
                           438                                    
00FD E402                  439                     IN      AL,IIR                  ;read in serial INT ID
00FF 2407                  440                     AND     AL,00000111B
0101 3C04                  441                     CMP     AL,00000100B            ;check if rx interrupt
0103 740F                  442                     JE      RECEIVE_INTR
                           443     
0105 3C02                  444                     CMP     AL,00000010B            ;check if tx interrupt
0107 741D                  445                     JE      TRANSMIT_INTR
                           446     
                           447                     
                           448     ;RESET_INT_CTL
0109 BA22FF                449                     MOV DX, EOI
010C B80C00                450                     MOV AX, 12
010F EE                    451                     OUT DX, AL
                           452     
0110 5A                    453                     POP     DX
0111 5B                    454                     POP     BX                      ;false serial interrupt
0112 58                    455                     POP     AX
0113 CF                    456                     IRET                            ;return
                           457     
0114                       458     RECEIVE_INTR:   
                           459                   
0114 E400                  460                     IN      AL,SRB                  
                           461     ; Information received will be used by user routine
                           462     ; Action to be taken will be contained in SERIAL_REC_ACTION
0116 9A0000----     E      463                     CALL    FAR PTR SERIAL_REC_ACTION
                           464                     
011B BA22FF                465                     MOV DX, EOI
011E B80C00                466                     MOV AX, 12
0121 EE                    467                     OUT DX, AL
0122 5A                    468                     POP     DX
0123 5B                    469                     POP     BX                      ;false serial interrupt
0124 58                    470                     POP     AX
0125 CF                    471                     IRET
                           472     
0126                       473     TRANSMIT_INTR:
                           474                    
0126 06                    475                     PUSH    ES                      ;save ES
0127 BB----         R      476                     MOV     BX,SEG QUEUE_TAIL       ;set ES to SERIAL_Q_SEG
012A 8EC3                  477                     MOV     ES,BX
012C 268B1E8200            478                     MOV     BX,ES:QUEUE_TAIL
0131 263B1E8000            479                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
0136 742B                  480                     JE      L_TX2
0138 268B1E8000            481                     MOV     BX,ES:QUEUE_HEAD        ;get data from queue
013D 268A07                482                     MOV     AL,ES:QUE_BASE[BX]
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE   10


LOC  OBJ                  LINE     SOURCE

0140 E600                  483                     OUT     STB,AL                  ;tx data
0142 26FF068000            484                     INC     ES:QUEUE_HEAD           ;point to next data
0147 26813E80008000        485                     CMP     ES:QUEUE_HEAD,QUEUE_LEN ;wrap around if necessary
014E 7C07                  486                     JL      L_TX1
0150 26C70680000000        487                     MOV     ES:QUEUE_HEAD,0
0157                       488     L_TX1:          
0157 268B1E8200            489                     MOV     BX,ES:QUEUE_TAIL
015C 263B1E8000            490                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
0161 7506                  491                     JNE     L_TX3
0163                       492     L_TX2:
0163 E401                  493                     IN      AL,SIER                 ;no more, disable TX interrupt.
0165 24FD                  494                     AND     AL,11111101B
0167 E601                  495                     OUT     SIER,AL
0169                       496     L_TX3:
                           497                     
                           498     ;RESET_INT_CTL
0169 BA22FF                499                     MOV DX, EOI
016C B80C00                500                     MOV AX, 12
016F EE                    501                     OUT DX, AL
0170 07                    502                     POP     ES                      ;restore original ES(transmit)
                           503                     
0171 5A                    504                     POP     DX 
0172 5B                    505                     POP     BX                      ;return serial interrupt
0173 58                    506                     POP     AX
0174 CF                    507                     IRET
                           508     ; **************** End of SERIAL_INTR service routine ************************
                           509     
                           510     
                           511     
                           512     
                           513     
                           514     
                           515     ; **************** Start of TIMER0_INTR service routine ******************
0175                       516     TIMER0_INTR:
0175 50                    517                     PUSH    AX
                           518                     
                           519     ; Action to be taken on timer0 interrupt to be written by user
0176 9A0000----     E      520                     CALL    FAR PTR TIMER0_ACTION
                           521                   
017B 58                    522                     POP     AX              ;return interrupt
                           523                     ;RESET_INT_CTL  
017C BA22FF                524                     MOV DX, EOI
017F B80800                525                     MOV AX, 8
0182 EE                    526                     OUT DX, AL
0183 CF                    527                     IRET
                           528     ; **************** End of TIMER0_INTR service routine ************************
                           529     
                           530     
                           531     ; **************** Start of TIMER1_INTR service routine ******************
0184                       532     TIMER1_INTR:
0184 50                    533                     PUSH    AX
                           534                     
                           535     ; Action to be taken on timer1 interrupt to be written by user
0185 9A0000----     E      536                     CALL    FAR PTR TIMER1_ACTION
                           537                   
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     05:12:16  12/04/;2  PAGE   11


LOC  OBJ                  LINE     SOURCE

018A 58                    538                     POP     AX              ;return interrupt
                           539                     ;RESET_INT_CTL  
018B BA22FF                540                     MOV DX, EOI
018E B80800                541                     MOV AX, 8
0191 EE                    542                     OUT DX, AL
0192 CF                    543                     IRET
                           544     ; **************** End of TIMER1_INTR service routine ************************
                           545     
                           546     
                           547     ; **************** Start of TIMER2_INTR service routine ******************
0193                       548     TIMER2_INTR:
0193 50                    549                     PUSH    AX
                           550                     
                           551     ; Action to be taken on timer2 interrupt to be written by user
0194 9A0000----     E      552                     CALL    FAR PTR TIMER2_ACTION
                           553                   
0199 58                    554                     POP     AX              ;return interrupt
                           555                     ;RESET_INT_CTL  
019A BA22FF                556                     MOV DX, EOI
019D B80800                557                     MOV AX, 8
01A0 EE                    558                     OUT DX, AL
01A1 CF                    559                     IRET
                           560     ; **************** End of TIMER2_INTR service routine ************************
                           561     
                           562     
                           563     
----                       564     MISC_ROUTINE    ENDS
                           565     
                           566     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
